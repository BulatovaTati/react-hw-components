{"version":3,"file":"static/js/460.12fd48b2.chunk.js","mappings":"oPA0CA,UAnCa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA+BE,EAAAA,EAAAA,UAAS,IAAxC,eAAOC,EAAP,KAAiBC,EAAjB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,IAAWN,GAFpC,OAEUO,EAFV,OAGIH,EAAWG,EAAOC,MAHtB,gDAKIC,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,KAGF,+BACuB,IAApBG,EAASS,SAAgB,SAAC,IAAD,KAC1B,SAAC,IAAD,UACGT,GACCA,EAASU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACnC,OACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAiBC,KAAMD,EAAcE,IAAKH,KAC1C,0BAAOA,KACP,0CAAkBD,OAHTD,EAMd,QAIV,C,wGCtCYM,EAAOC,EAAAA,GAAAA,GAAH,ifA0BJC,EAAOD,EAAAA,GAAAA,GAAH,8lB,oCCpBjB,IAJwB,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAC/B,OAAO,gBAAKI,IAAG,UAAML,EALF,kCAKsCA,EAHzD,+DAGiEC,IAAKA,GACvE,C,oCCFD,IAJe,kBACb,cAAGK,MAAO,CAAEC,UAAW,UAAvB,iDADa,C","sources":["components/MovieDetails/Cast/Cast.jsx","components/MovieDetails/Cast/Cast.styled.js","components/MovieDetails/MovieCard/ImagePoster.jsx","components/NoneInfo/NoneInfo.jsx"],"sourcesContent":["import NoInfo from 'components/NoneInfo/NoneInfo';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/Fetch';\nimport ImagePosterPath from '../MovieCard/ImagePoster';\nimport { List, Item } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [creadits, setCredits] = useState([]);\n\n  useEffect(() => {\n    async function fetchGredits() {\n      try {\n        const movies = await getCredits(movieId);\n        setCredits(movies.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchGredits();\n  }, [movieId]);\n\n  return (\n    <section>\n      {creadits.length === 0 && <NoInfo />}\n      <List>\n        {creadits &&\n          creadits.map(({ id, character, name, profile_path }) => {\n            return (\n              <Item key={id}>\n                <ImagePosterPath path={profile_path} alt={name} />\n                <span>{name}</span>\n                <span>Character: {character}</span>\n              </Item>\n            );\n          })}\n      </List>\n    </section>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  list-style: none;\n  margin-top: 25px;\n  overflow-x: scroll;\n  scroll-behavior: smooth;\n  scroll-snap-type: x mandatory;\n  -webkit-overflow-scrolling: touch;\n  padding: 25px;\n\n  ::-webkit-scrollbar-thumb {\n    background: #64b5f6;\n    border-radius: 15px;\n  }\n\n  ::-webkit-scrollbar {\n    height: 15px;\n    background: transparent;\n  }\n  @media (max-width: 560px) {\n    ::-webkit-scrollbar-thumb {\n      background: none;\n    }\n  }\n`;\n\nexport const Item = styled.li`\n  margin: 0 15px;\n  min-width: 250px;\n  border: 1px solid #0101011a;\n  box-shadow: rgb(1 1 1 / 10%) 0px 1px 10px 5px;\n  padding-bottom: 40px;\n  border-radius: 15px;\n  display: flex;\n  background-color: white;\n  flex-direction: column;\n  transition: transform 0.5s ease;\n  scroll-snap-align: start;\n\n  img {\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n    width: 100%;\n  }\n\n  span {\n    font-weight: 600;\n    margin-top: 15px;\n    font-size: 18px;\n    text-align: center;\n  }\n  @media (max-width: 875px) {\n    min-width: 180px;\n  }\n`;\n","const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst noPosterImg =\n  'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\n\nconst ImagePosterPath = ({ path, alt }) => {\n  return <img src={`${!path ? noPosterImg : BASE_IMG_URL + path}`} alt={alt} />;\n};\n\nexport default ImagePosterPath;\n","const NoInfo = () => (\n  <p style={{ textAlign: 'center' }}>Sorry, there aren't any informations</p>\n);\n\nexport default NoInfo;\n"],"names":["movieId","useParams","useState","creadits","setCredits","useEffect","getCredits","movies","cast","console","log","fetchGredits","length","map","id","character","name","profile_path","path","alt","List","styled","Item","src","style","textAlign"],"sourceRoot":""}