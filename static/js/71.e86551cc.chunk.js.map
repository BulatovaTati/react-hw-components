{"version":3,"file":"static/js/71.e86551cc.chunk.js","mappings":"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","sources":["components/Contacts/Menu/Menu.styled.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/Contacts/Menu/Menu.jsx","components/Contacts/ContactsForm/ContactsForm.styled.js","components/Contacts/ContactsForm/ContactsForm.jsx","components/Contacts/ContactsList/ContactItem/ContactItem.styled.js","components/Contacts/ContactsList/ContactItem/ContactItem.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Contacts/ContactsList/ContactsList.styled.js","components/Contacts/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Phonebook.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px 20px;\n  background-color: ${props => props.theme.colors.NavBGColor};\n  border-radius: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: ${({ isOpen }) => (isOpen ? 'orange' : '#fff')};\n  font-size: 30px;\n  border: none;\n  border-radius: 50%;\n  border: 1px solid;\n\n  border-color: ${({ isOpen }) => (isOpen ? 'orange' : '#fff')};\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n\n  :not(:last-child) {\n    margin-left: auto;\n    margin-right: 10px;\n  }\n  :hover {\n    color: ${props => props.theme.colors.activeTextColor};\n    border-color: ${props => props.theme.colors.activeTextColor};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding-top: ${props => props.theme.space[2]}px;\n  padding-bottom: ${props => props.theme.space[2]}px;\n  font-size: ${props => props.theme.fontSizes[5]}px;\n  text-align: center;\n  color: ${props => props.color};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Title.styled';\n\nexport const TitleEl = ({ str, color = null }) => {\n  return <Title color={color}>{str}</Title>;\n};\n\nTitleEl.propTypes = {\n  str: PropTypes.string,\n};\n","import { Button, Wrapper } from './Menu.styled';\nimport { RiUserSearchLine, RiUserAddLine } from 'react-icons/ri';\nimport { TitleEl } from 'components/Title/Title';\n\nexport const Menu = ({ toggle, isOpenFilter, isOpenForm }) => {\n  return (\n    <Wrapper>\n      <TitleEl str=\"Phonebook\" color=\"white\" />\n\n      <Button\n        onClick={() => toggle('isOpenForm')}\n        isOpen={isOpenForm}\n        title=\"Add contact\"\n        type=\"button\"\n      >\n        <RiUserAddLine />\n      </Button>\n\n      <Button\n        onClick={() => toggle('isOpenFilter')}\n        isOpen={isOpenFilter}\n        title=\"Search\"\n        type=\"button\"\n      >\n        <RiUserSearchLine />\n      </Button>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled.div`\n  padding: 20px 40px;\n  background-color: ${props => props.theme.colors.bcgTable};\n  border-bottom: 2px solid ${props => props.theme.colors.NavBGColor};\n  text-align: center;\n  border-radius: 10px;\n`;\n\nexport const FormInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 auto ${props => props.theme.space[4]}px;\n  text-align: start;\n  max-width: 300px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  font-weight: ${props => props.theme.fontWeights.medium};\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.space[4]}px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  padding: 5px 10px;\n  border: 2px solid ${props => props.theme.colors.borderColor};\n  border-radius: 5px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.57, 0.21, 0.69, 1.25);\n\n  :hover,\n  :focus {\n    border-color: ${props => props.theme.colors.NavBGColor};\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-top: 5px;\n  font-size: ${props => props.theme.fontSizes[1]}px;\n  color: ${props => props.theme.colors.errorMessage};\n`;\nexport const Button = styled.button`\n  min-width: 120px;\n  padding: 10px 20px;\n  border: none;\n  border: 2px solid ${props => props.theme.colors.whiteTextColor};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  color: ${props => props.theme.colors.whiteTextColor};\n  background-color: ${props => props.theme.colors.NavBGColor};\n  text-align: center;\n  transition: all 250ms linear;\n  cursor: pointer;\n  border-radius: 10px;\n  :hover {\n    border: 2px solid ${props => props.theme.colors.NavBGColor};\n    color: ${props => props.theme.colors.NavBGColor};\n    background-color: ${props => props.theme.colors.whiteTextColor};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport {\n  ErrorMsg,\n  FormInner,\n  FormWrapper,\n  Input,\n  Label,\n} from './ContactsForm.styled';\nimport { Button } from './ContactsForm.styled';\nimport {\n  useAddContactMutation,\n  useGetContactsQuery,\n} from 'redux/contacts/contactsSlice';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup.string().min(3).matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required(),\n});\n\nexport const ContactsForm = ({ toggle }) => {\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      return Notify.failure(`${values.name} is already in contacts`);\n    }\n\n    try {\n      await addContact(values);\n      Notify.success('Contact added');\n      resetForm();\n      toggle('isOpenForm');\n    } catch (error) {\n      Notify.failure('Contact does not added');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrapper>\n        <Form autoComplete=\"off\">\n          <FormInner>\n            <Label htmlFor=\"name\">\n              Name\n              <Input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces.\n                For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n              <ErrorMsg name=\"name\" component=\"div\" />\n            </Label>\n\n            <Label htmlFor=\"number\">\n              Number\n              <Input\n                id=\"number\"\n                type=\"tel\"\n                name=\"number\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n              <ErrorMsg name=\"number\" component=\"div\" />\n            </Label>\n          </FormInner>\n          <Button type=\"submit\">Add contact</Button>\n          <Button onClick={() => toggle('isOpenForm')} type=\"button\">\n            Cancel\n          </Button>\n        </Form>\n      </FormWrapper>\n    </Formik>\n  );\n};\n\nContactsForm.propTypes = {\n  toggle: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { RiUserFollowLine } from 'react-icons/ri';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${props => props.theme.colors.borderColor};\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.space[4]}px;\n  }\n`;\n\nexport const Contact = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-weight: ${props => props.theme.fontWeights.medium};\n`;\n\nexport const IconUser = styled(RiUserFollowLine)`\n  padding: ${props => props.theme.space[2]}px;\n  border: 1px solid ${props => props.theme.colors.NavBGColor};\n  border-radius: 50%;\n  margin-right: ${props => props.theme.space[3]}px;\n  color: ${props => props.theme.colors.NavBGColor};\n  cursor: pointer;\n  transition: color 250ms linear;\n  font-size: 26px;\n`;\nexport const Button = styled.button`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => props.theme.fontSizes[4]}px;\n  border: none;\n\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n\n  :hover {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Contact, IconUser, Item, Button } from './ContactItem.styled';\nimport { RiDeleteBin7Line } from 'react-icons/ri';\nimport { Notify } from 'notiflix';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsSlice';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const handleDelete = () => {\n    deleteContact(id);\n    Notify.success('Contact removed');\n  };\n\n  return (\n    <Item>\n      <Contact>\n        <IconUser />\n        {name} : {number}\n      </Contact>\n      <Button onClick={handleDelete} title=\"Delete\" type=\"button\">\n        <RiDeleteBin7Line />\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: ${props => props.theme.space[5]}px;\n  background-color: ${props => props.theme.colors.bcgTable};\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n`;\n\n ","import { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\nimport { selectFilterValue } from 'redux/filter/filterSlice';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { Notification } from 'components/Notification/Notification';\nimport { TitleEl } from 'components/Title/Title';\nimport { Wrapper } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const filter = useSelector(selectFilterValue);\n  const { data } = useGetContactsQuery();\n\n  const visibleContacts = () =>\n    data.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const filteredContacts = visibleContacts();\n\n  return (\n    <Wrapper>\n      <TitleEl>Contacts</TitleEl>\n      {filteredContacts.length > 0 ? (\n        <ul>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      ) : (\n        <Notification message=\"Contact list is empty\" />\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  padding: 20px 40px;\n  background-color: ${props => props.theme.colors.bcgTable};\n  border-bottom: 2px solid ${props => props.theme.colors.NavBGColor};\n  text-align: center;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  padding: 5px 10px;\n  border: 2px solid ${props => props.theme.colors.borderColor};\n  border-radius: 5px;\n  outline: none;\n  width: 80%;\n\n  :hover,\n  :focus {\n    border-color: ${props => props.theme.colors.NavBGColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getfilteredContacts,\n  selectFilterValue,\n} from 'redux/filter/filterSlice';\nimport { FilterWrapper, Input, Title } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilterValue);\n\n  return (\n    <FilterWrapper>\n      <Title>Filter</Title>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(getfilteredContacts(e.target.value))}\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  max-width: 450px;\n  margin: 0 auto;\n  padding: 30px 0;\n`;\n","import { useState } from 'react';\nimport { ContactsForm, Menu, ContactsList } from 'components/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container } from 'components/Phonebook.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useGetContactsQuery } from 'redux/contacts/contactsSlice';\n\nconst Contacts = () => {\n  const { isFetching, error } = useGetContactsQuery();\n  const [isOpenForm, setIsOpenForm] = useState(false);\n  const [isOpenFilter, setIsOpenFilter] = useState(false);\n\n  const toggle = component => {\n    switch (component) {\n      case 'isOpenForm':\n        setIsOpenForm(f => !f);\n        break;\n      case 'isOpenFilter':\n        setIsOpenFilter(f => !f);\n        break;\n      default:\n        throw new Error(`Unknown component${component}`);\n    }\n  };\n\n  return (\n    <Container>\n      <Menu\n        isOpenForm={isOpenForm}\n        isOpenFilter={isOpenFilter}\n        toggle={toggle}\n      />\n      {isOpenForm && <ContactsForm toggle={toggle} />}\n      {isOpenFilter && <Filter />}\n      {isFetching && !error && <Loader />}\n      {!isFetching && <ContactsList />}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Wrapper","styled","props","theme","colors","NavBGColor","Button","isOpen","activeTextColor","Title","space","fontSizes","color","TitleEl","str","Menu","toggle","isOpenFilter","isOpenForm","onClick","title","type","FormWrapper","bcgTable","FormInner","Label","fontWeights","medium","Input","Field","borderColor","ErrorMsg","ErrorMessage","errorMessage","whiteTextColor","schema","yup","shape","name","min","matches","required","number","ContactsForm","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","handleSubmit","values","resetForm","find","contact","Notify","initialValues","validationSchema","onSubmit","autoComplete","htmlFor","id","component","Item","Contact","IconUser","RiUserFollowLine","ContactItem","useDeleteContactMutation","deleteContact","Message","Notification","message","ContactsList","filter","useSelector","selectFilterValue","filteredContacts","toLowerCase","includes","length","map","FilterWrapper","Filter","dispatch","useDispatch","value","onChange","e","getfilteredContacts","target","Container","isFetching","error","useState","setIsOpenForm","setIsOpenFilter","f","Error","Loader"],"sourceRoot":""}