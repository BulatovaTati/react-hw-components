{"version":3,"file":"static/js/281.c62c5f5b.chunk.js","mappings":"yTACaA,EAAYC,EAAAA,GAAAA,QAAH,iOAYTC,EAAaD,EAAAA,GAAAA,KAAH,uRAWVE,EAAmBF,EAAAA,GAAAA,OAAH,gaAkBhBG,EAAwBH,EAAAA,GAAAA,MAAH,6MAYrBI,EAAkBJ,EAAAA,GAAAA,MAAH,0P,SCP5B,EAlCkB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,UAACT,EAAD,YACE,UAACE,EAAD,CAAYQ,SAbK,SAAAC,GAGnB,GAFAA,EAAEC,iBAEmB,KAAjBJ,EAAMK,OACR,OAAOC,EAAAA,GAAAA,KAAW,2BAGpBR,EAASE,GACTC,EAAS,GACV,EAIG,WACE,SAACJ,EAAD,CACEU,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,YAAY,2BACZC,MAAOX,EACPF,SAAU,SAAAK,GAAC,OAAIF,EAASE,EAAES,OAAOD,MAAME,cAA5B,KAEb,UAAClB,EAAD,CAAkBY,KAAK,SAAvB,WACE,SAAC,MAAD,CAAUO,KAAM,MAChB,SAAClB,EAAD,4BAGJ,SAAC,KAAD,CAAgBmB,UAAW,QAGhC,E,oBCWD,EAhDe,WAAO,IAAD,EACnB,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAkClB,EAAAA,EAAAA,WAAS,GAA3C,eAAOmB,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,oGAEIN,GAAa,GAFjB,UAGyBO,EAAAA,EAAAA,IAAeH,GAHxC,OAGUP,EAHV,OAIIC,EAAUD,EAAOW,SAEa,IAA1BX,EAAOW,QAAQC,SACjBC,EAAAA,EAAAA,GAAgBN,GAPtB,iDAUIO,EAAAA,EAAAA,KAVJ,yBAYIX,GAAa,GAZjB,6EAHc,sBACM,KAAhBI,GADU,mCAmBdQ,EACD,GAAE,CAACR,IAYJ,OACE,6BACE,SAAC,EAAD,CAAWzB,SARG,SAAAkC,GAJE,IAAAhC,EAKdgC,IAAaX,IAJjBC,EAA0B,MADRtB,EAMNgC,GALmB,CAAEhC,MAAOA,GAAU,CAAC,GAMnDiB,EAAU,IACX,IAKIC,IAAa,SAACe,EAAA,EAAD,IACbjB,IAAWE,IAAa,SAAC,IAAD,CAAYF,OAAQA,KAC7C,SAAC,KAAD,CAAgBD,UAAW,QAGhC,C,4FCpDYe,G,QAAO,kBAAMxB,EAAAA,GAAAA,KAAW,uCAAjB,GAEPuB,EAAkB,SAAAK,GAAI,OACjC5B,EAAAA,GAAAA,KAAA,6CAAiD4B,GADhB,C","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/Toast.js"],"sourcesContent":["import styled from 'styled-components';\nexport const SearchBox = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 500px;\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FcSearch } from 'react-icons/fc';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  SearchBox,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nconst Searchbar = ({ onChange }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return toast.warn('Oops... Enter the title');\n    }\n\n    onChange(query);\n    setQuery('');\n  };\n\n  return (\n    <SearchBox>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          name=\"query\"\n          autocomplete=\"off\"\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={e => setQuery(e.target.value.toLowerCase())}\n        />\n        <SearchFormButton type=\"submit\">\n          <FcSearch size={30} />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n      </SearchForm>\n      <ToastContainer autoClose={2000} />\n    </SearchBox>\n  );\n};\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onChange: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieByName } from 'services/Fetch';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MovieList/MovieList';\nimport { Warn, WarnSearchQuery } from 'services/Toast';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        const movies = await getMovieByName(searchQuery);\n        setMovies(movies.results);\n\n        if (movies.results.length === 0) {\n          WarnSearchQuery(searchQuery);\n        }\n      } catch (_) {\n        Warn();\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovies();\n  }, [searchQuery]);\n\n  const searchMovie = query => {\n    setSearchParams(query !== '' ? { query: query } : {});\n  };\n\n  const getMovies = newQuery => {\n    if (newQuery === searchParams) return;\n    searchMovie(newQuery);\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <Searchbar onChange={getMovies} />\n      {isLoading && <Loader />}\n      {movies && !isLoading && <MoviesList movies={movies} />}\n      <ToastContainer autoClose={2000} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Warn = () => toast.warn('Sorry, smth wrong. Please try again.');\n\nexport const WarnSearchQuery = elem =>\n  toast.warn(`These aren't any movies with title ${elem}`);\n"],"names":["SearchBox","styled","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","useState","query","setQuery","onSubmit","e","preventDefault","trim","toast","type","name","autocomplete","placeholder","value","target","toLowerCase","size","autoClose","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getMovieByName","results","length","WarnSearchQuery","Warn","fetchMovies","newQuery","Loader","elem"],"sourceRoot":""}