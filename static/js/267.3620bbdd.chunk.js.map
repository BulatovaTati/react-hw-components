{"version":3,"file":"static/js/267.3620bbdd.chunk.js","mappings":"iNACaA,EAAYC,EAAAA,GAAAA,IAAH,oFAMTC,EAAOD,EAAAA,GAAAA,KAAH,sL,sECLJE,E,QAAQF,GAAAA,GAAH,oIACD,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACF,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACV,SAAAF,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,IAET,SAAAH,GAAK,OAAIA,EAAMI,KAAV,I,UCJHC,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAwB,IAAnBF,MAAAA,OAAmB,MAAX,KAAW,EAChD,OAAO,SAACL,EAAD,CAAOK,MAAOA,EAAd,SAAsBE,GAC9B,C,mJCHYC,EAAUV,EAAAA,GAAAA,IAAH,+IAIE,SAAAG,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAIdC,EAASb,EAAAA,GAAAA,OAAH,0dAOR,qBAAGc,OAAuB,SAAW,MAArC,IAMO,qBAAGA,OAAuB,SAAW,MAArC,IAUL,SAAAX,GAAK,OAAIA,EAAMC,MAAMO,OAAOI,eAAvB,IACE,SAAAZ,GAAK,OAAIA,EAAMC,MAAMO,OAAOI,eAAvB,I,8BC9BZC,EAAO,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC3C,OACE,UAACT,EAAD,YACE,SAACR,EAAA,EAAD,CAASO,IAAI,YAAYF,MAAM,WAE/B,SAACM,EAAD,CACEO,QAAS,kBAAMH,EAAO,aAAb,EACTH,OAAQK,EACRE,MAAM,cACNC,KAAK,SAJP,UAME,SAAC,MAAD,OAGF,SAACT,EAAD,CACEO,QAAS,kBAAMH,EAAO,eAAb,EACTH,OAAQI,EACRG,MAAM,SACNC,KAAK,SAJP,UAME,SAAC,MAAD,QAIP,E,8EC1BYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAGnBC,GAAkBC,EAAAA,EAAAA,IAC7B,CAACT,EAH8B,SAAAC,GAAK,OAAIA,EAAMS,MAAV,IAIpC,SAACR,EAAUQ,GACT,OAAOR,EAASQ,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cADf,GAG/B,I,UCVUE,EAActC,EAAAA,GAAAA,IAAH,yJAEF,SAAAG,GAAK,OAAIA,EAAMC,MAAMO,OAAO4B,QAAvB,IACE,SAAApC,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAKrB4B,EAAYxC,EAAAA,GAAAA,IAAH,qKAIH,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IAKXoC,EAAQzC,EAAAA,GAAAA,MAAH,mKAID,SAAAG,GAAK,OAAIA,EAAMC,MAAMsC,YAAYC,MAA5B,IAGD,SAAAxC,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IAIbuC,GAAQ5C,EAAAA,EAAAA,IAAO6C,EAAAA,GAAP7C,CAAH,oQACH,SAAAG,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,IAEE,SAAAH,GAAK,OAAIA,EAAMC,MAAMO,OAAOmC,WAAvB,IAOP,SAAA3C,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAIZmC,GAAW/C,EAAAA,EAAAA,IAAOgD,EAAAA,GAAPhD,CAAH,gFAEN,SAAAG,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,IACT,SAAAH,GAAK,OAAIA,EAAMC,MAAMO,OAAOsC,YAAvB,IAEHpC,EAASb,EAAAA,GAAAA,OAAH,2WAIG,SAAAG,GAAK,OAAIA,EAAMC,MAAMO,OAAOuC,cAAvB,IACZ,SAAA/C,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,IACT,SAAAH,GAAK,OAAIA,EAAMC,MAAMO,OAAOuC,cAAvB,IACM,SAAA/C,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAMH,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAChB,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IACM,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,OAAOuC,cAAvB,IC3CvBC,EAASC,EAAAA,KAAaC,MAAM,CAChClB,KAAMiB,EAAAA,KAAaE,IAAI,GAAGC,QANT,yHAM6B,qBAAqBC,WACnEC,OAAQL,EAAAA,KAELG,QANH,6EAMwB,6BACrBC,aAGQE,EAAe,SAAC,GAAgB,IAAdzC,EAAa,EAAbA,OACvB0C,GAAWC,EAAAA,EAAAA,MACXnC,GAAWoC,EAAAA,EAAAA,IAAYtC,GAEvBuC,EAAY,mCAAG,WAAOC,EAAP,6EAAiBC,EAAjB,EAAiBA,WAChCvC,EAASwC,MAAK,SAAA/B,GAAO,OAAIA,EAAQC,OAAS4B,EAAO5B,IAA5B,IADN,yCAEV+B,EAAAA,OAAAA,QAAA,UAAkBH,EAAO5B,KAAzB,6BAFU,gCAMXwB,GAASQ,EAAAA,EAAAA,IAAWJ,IANT,OAOjBG,EAAAA,OAAAA,QAAe,iBACfF,IACA/C,EAAO,cATU,kDAWjBiD,EAAAA,OAAAA,QAAe,0BAXE,0DAAH,wDAelB,OACE,SAAC,KAAD,CACEE,cAAe,CACbjC,KAAM,GACNsB,OAAQ,IAEVY,iBAAkBlB,EAClBmB,SAAUR,EANZ,UAQE,SAACxB,EAAD,WACE,UAAC,KAAD,CAAMiC,aAAa,MAAnB,WACE,UAAC/B,EAAD,YACE,UAACC,EAAD,CAAO+B,QAAQ,OAAf,kBAEE,SAAC5B,EAAD,CACE6B,GAAG,OACHnD,KAAK,OACLa,KAAK,OACLd,MAAM,4IAGR,SAAC0B,EAAD,CAAUZ,KAAK,OAAOuC,UAAU,YAGlC,UAACjC,EAAD,CAAO+B,QAAQ,SAAf,oBAEE,SAAC5B,EAAD,CACE6B,GAAG,SACHnD,KAAK,MACLa,KAAK,SACLd,MAAM,kGAER,SAAC0B,EAAD,CAAUZ,KAAK,SAASuC,UAAU,eAGtC,SAAC,EAAD,CAAQpD,KAAK,SAAb,0BACA,SAAC,EAAD,CAAQF,QAAS,kBAAMH,EAAO,aAAb,EAA4BK,KAAK,SAAlD,0BAOT,ECzFYqD,EAAO3E,EAAAA,GAAAA,GAAH,+LAIY,SAAAG,GAAK,OAAIA,EAAMC,MAAMO,OAAOmC,WAAvB,IAGb,SAAA3C,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IAIbuE,EAAU5E,EAAAA,GAAAA,EAAH,4GAGL,SAAAG,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,IACH,SAAAH,GAAK,OAAIA,EAAMC,MAAMsC,YAAYC,MAA5B,IAGTkC,IAAW7E,EAAAA,EAAAA,IAAO8E,EAAAA,IAAP9E,CAAH,8MACR,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACI,SAAAF,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAET,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACZ,SAAAF,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAKHC,GAASb,EAAAA,GAAAA,OAAH,kSAMJ,SAAAG,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,I,WC9BPyE,GAAc,SAAC,GAA0B,IAAxBN,EAAuB,EAAvBA,GAAItC,EAAmB,EAAnBA,KAAMsB,EAAa,EAAbA,OAChCE,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAACe,EAAD,YACE,UAACC,EAAD,YACE,SAACC,GAAD,IACC1C,EAFH,MAEYsB,MAEZ,SAAC,GAAD,CAAQrC,QAXS,WACnBuC,GAASqB,EAAAA,EAAAA,IAAcP,IACvBP,GAAAA,OAAAA,QAAe,kBAChB,EAQkC7C,MAAM,SAASC,KAAK,SAAnD,UACE,SAAC,MAAD,QAIP,ECxBY2D,GAAUjF,EAAAA,GAAAA,EAAH,oEACL,SAAAG,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,ICAP4E,GAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,SAACF,GAAD,UAAUE,GAClB,ECHYzE,GAAUV,EAAAA,GAAAA,IAAH,6FACP,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IACI,SAAAF,GAAK,OAAIA,EAAMC,MAAMO,OAAO4B,QAAvB,ICGd6C,IDCQpF,EAAAA,GAAAA,GAAH,wEACC,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,ICFI,WAC1B,IAAMoB,GAAWoC,EAAAA,EAAAA,IAAY9B,GAE7B,OACE,UAAC,GAAD,YACE,SAAC7B,EAAA,EAAD,uBACCuB,EAAS4D,OAAS,GACjB,wBACG5D,EAAS6D,KAAI,gBAAGb,EAAH,EAAGA,GAAItC,EAAP,EAAOA,KAAMsB,EAAb,EAAaA,OAAb,OACZ,SAACsB,GAAD,CAAsBN,GAAIA,EAAItC,KAAMA,EAAMsB,OAAQA,GAAhCgB,EADN,OAKhB,SAACS,GAAD,CAAcC,QAAQ,4BAI7B,G,WCtBYI,GAAgBvF,EAAAA,GAAAA,IAAH,yJAEJ,SAAAG,GAAK,OAAIA,EAAMC,MAAMO,OAAO4B,QAAvB,IACE,SAAApC,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IAKrBV,GAAQF,EAAAA,GAAAA,GAAH,wEACC,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,MAAM,EAAtB,IAIXuC,GAAQ5C,EAAAA,GAAAA,MAAH,2MACH,SAAAG,GAAK,OAAIA,EAAMC,MAAME,UAAU,EAA1B,IAEE,SAAAH,GAAK,OAAIA,EAAMC,MAAMO,OAAOmC,WAAvB,IAOP,SAAA3C,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,UAAvB,IClBZ4E,GAAS,WACpB,IAAM7B,GAAWC,EAAAA,EAAAA,MACX6B,GAAQ5B,EAAAA,EAAAA,IAAY6B,GAAAA,IAE1B,OACE,UAACH,GAAD,YACE,SAAC,GAAD,sBACA,SAAC,GAAD,CACEjE,KAAK,OACLa,KAAK,SACLsD,MAAOA,EACPE,SAAU,SAAAC,GAAC,OAAIjC,GAASkC,EAAAA,GAAAA,IAAoBD,EAAEE,OAAOL,OAA1C,MAIlB,E,sBC2BD,GAxCiB,WACf,IAAM9B,GAAWC,EAAAA,EAAAA,MACXhC,GAAYiC,EAAAA,EAAAA,IAAYlC,GACxBG,GAAQ+B,EAAAA,EAAAA,IAAYhC,IAE1BkE,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,IAEJ,OAAoCsC,EAAAA,EAAAA,WAAS,GAA7C,eAAO9E,EAAP,KAAmB+E,EAAnB,KACA,GAAwCD,EAAAA,EAAAA,WAAS,GAAjD,eAAO/E,EAAP,KAAqBiF,EAArB,KAEMlF,EAAS,SAAAyD,GACb,OAAQA,GACN,IAAK,aACHwB,GAAc,SAAAE,GAAC,OAAKA,CAAL,IACf,MACF,IAAK,eACHD,GAAgB,SAAAC,GAAC,OAAKA,CAAL,IACjB,MACF,QACE,MAAM,IAAIC,MAAJ,2BAA8B3B,IAEzC,EAED,OACE,UAAC,KAAD,YACE,SAAC1D,EAAD,CACEG,WAAYA,EACZD,aAAcA,EACdD,OAAQA,IAETE,IAAc,SAACuC,EAAD,CAAczC,OAAQA,IACpCC,IAAgB,SAACsE,GAAD,IAChB5D,IAAcE,IAAS,SAACwE,GAAA,EAAD,KACtB1E,IAAa,SAACwD,GAAD,MAGpB,C","sources":["components/Phonebook.styled.js","components/Title/Title.styled.js","components/Title/Title.jsx","components/Contacts/Menu/Menu.styled.js","components/Contacts/Menu/Menu.jsx","redux/contacts/contactsSelectors.js","components/Contacts/ContactsForm/ContactsForm.styled.js","components/Contacts/ContactsForm/ContactsForm.jsx","components/Contacts/ContactsList/ContactItem/ContactItem.styled.js","components/Contacts/ContactsList/ContactItem/ContactItem.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Contacts/ContactsList/ContactsList.styled.js","components/Contacts/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Container = styled.div`\n  max-width: 450px;\n  margin: 0 auto;\n  padding: 30px 0;\n`;\n\nexport const Main = styled.main`\n  min-height: calc(100vh - 70px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #1976d2;\n  border-radius: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  padding-top: ${props => props.theme.space[2]}px;\n  padding-bottom: ${props => props.theme.space[2]}px;\n  font-size: ${props => props.theme.fontSizes[5]}px;\n  text-align: center;\n  color: ${props => props.color};\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Title.styled';\n\nexport const TitleEl = ({ str, color = null }) => {\n  return <Title color={color}>{str}</Title>;\n};\n\nTitleEl.propTypes = {\n  str: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 10px 20px;\n  background-color: ${props => props.theme.colors.NavBGColor};\n  border-radius: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: ${({ isOpen }) => (isOpen ? 'orange' : '#fff')};\n  font-size: 30px;\n  border: none;\n  border-radius: 50%;\n  border: 1px solid;\n\n  border-color: ${({ isOpen }) => (isOpen ? 'orange' : '#fff')};\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n\n  :not(:last-child) {\n    margin-left: auto;\n    margin-right: 10px;\n  }\n  :hover {\n    color: ${props => props.theme.colors.activeTextColor};\n    border-color: ${props => props.theme.colors.activeTextColor};\n  }\n`;\n","import { Button, Wrapper } from './Menu.styled';\nimport { RiUserSearchLine, RiUserAddLine } from 'react-icons/ri';\nimport { TitleEl } from 'components/Title/Title';\n\nexport const Menu = ({ toggle, isOpenFilter, isOpenForm }) => {\n  return (\n    <Wrapper>\n      <TitleEl str=\"Phonebook\" color=\"white\" />\n\n      <Button\n        onClick={() => toggle('isOpenForm')}\n        isOpen={isOpenForm}\n        title=\"Add contact\"\n        type=\"button\"\n      >\n        <RiUserAddLine />\n      </Button>\n\n      <Button\n        onClick={() => toggle('isOpenFilter')}\n        isOpen={isOpenFilter}\n        title=\"Search\"\n        type=\"button\"\n      >\n        <RiUserSearchLine />\n      </Button>\n    </Wrapper>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilterValue = state => state.filter;\n\nexport const visibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormWrapper = styled.div`\n  padding: 20px 40px;\n  background-color: ${props => props.theme.colors.bcgTable};\n  border-bottom: 2px solid ${props => props.theme.colors.NavBGColor};\n  text-align: center;\n  border-radius: 10px;\n`;\n\nexport const FormInner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0 auto ${props => props.theme.space[4]}px;\n  text-align: start;\n  max-width: 300px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  font-weight: ${props => props.theme.fontWeights.medium};\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.space[4]}px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  padding: 5px 10px;\n  border: 2px solid ${props => props.theme.colors.borderColor};\n  border-radius: 5px;\n  outline: none;\n  transition: border-color 250ms cubic-bezier(0.57, 0.21, 0.69, 1.25);\n\n  :hover,\n  :focus {\n    border-color: ${props => props.theme.colors.NavBGColor};\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  margin-top: 5px;\n  font-size: ${props => props.theme.fontSizes[1]}px;\n  color: ${props => props.theme.colors.errorMessage};\n`;\nexport const Button = styled.button`\n  min-width: 120px;\n  padding: 10px 20px;\n  border: none;\n  border: 2px solid ${props => props.theme.colors.whiteTextColor};\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  color: ${props => props.theme.colors.whiteTextColor};\n  background-color: ${props => props.theme.colors.NavBGColor};\n  text-align: center;\n  transition: all 250ms linear;\n  cursor: pointer;\n  border-radius: 10px;\n  :hover {\n    border: 2px solid ${props => props.theme.colors.NavBGColor};\n    color: ${props => props.theme.colors.NavBGColor};\n    background-color: ${props => props.theme.colors.whiteTextColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  ErrorMsg,\n  FormInner,\n  FormWrapper,\n  Input,\n  Label,\n} from './ContactsForm.styled';\nimport { Button } from './ContactsForm.styled';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst phoneRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n  name: yup.string().min(3).matches(nameRegExp, 'Name is not valid').required(),\n  number: yup\n    .string()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .required(),\n});\n\nexport const ContactsForm = ({ toggle }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (contacts.find(contact => contact.name === values.name)) {\n      return Notify.failure(`${values.name} is already in contacts`);\n    }\n\n    try {\n      await dispatch(addContact(values));\n      Notify.success('Contact added');\n      resetForm();\n      toggle('isOpenForm');\n    } catch (error) {\n      Notify.failure('Contact does not added');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrapper>\n        <Form autoComplete=\"off\">\n          <FormInner>\n            <Label htmlFor=\"name\">\n              Name\n              <Input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces.\n                For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              />\n              <ErrorMsg name=\"name\" component=\"div\" />\n            </Label>\n\n            <Label htmlFor=\"number\">\n              Number\n              <Input\n                id=\"number\"\n                type=\"tel\"\n                name=\"number\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              />\n              <ErrorMsg name=\"number\" component=\"div\" />\n            </Label>\n          </FormInner>\n          <Button type=\"submit\">Add contact</Button>\n          <Button onClick={() => toggle('isOpenForm')} type=\"button\">\n            Cancel\n          </Button>\n        </Form>\n      </FormWrapper>\n    </Formik>\n  );\n};\n\nContactsForm.propTypes = {\n  toggle: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { RiUserFollowLine } from 'react-icons/ri';\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${props => props.theme.colors.borderColor};\n\n  :not(:last-child) {\n    margin-bottom: ${props => props.theme.space[4]}px;\n  }\n`;\n\nexport const Contact = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  font-weight: ${props => props.theme.fontWeights.medium};\n`;\n\nexport const IconUser = styled(RiUserFollowLine)`\n  padding: ${props => props.theme.space[2]}px;\n  border: 1px solid ${props => props.theme.colors.NavBGColor};\n  border-radius: 50%;\n  margin-right: ${props => props.theme.space[3]}px;\n  color: ${props => props.theme.colors.NavBGColor};\n  cursor: pointer;\n  transition: color 250ms linear;\n  font-size: 26px;\n`;\nexport const Button = styled.button`\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: ${props => props.theme.fontSizes[4]}px;\n  border: none;\n\n  background-color: transparent;\n  transition: all 100ms linear;\n  cursor: pointer;\n\n  :hover {\n    color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Contact, IconUser, Item, Button } from './ContactItem.styled';\nimport { RiDeleteBin7Line } from 'react-icons/ri';\nimport { Notify } from 'notiflix';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    Notify.success('Contact removed');\n  };\n\n  return (\n    <Item>\n      <Contact>\n        <IconUser />\n        {name} : {number}\n      </Contact>\n      <Button onClick={handleDelete} title=\"Delete\" type=\"button\">\n        <RiDeleteBin7Line />\n      </Button>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nexport const Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: ${props => props.theme.space[5]}px;\n  background-color: ${props => props.theme.colors.bcgTable};\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n`;\n\n ","import { ContactItem } from './ContactItem/ContactItem';\nimport { Notification } from 'components/Notification/Notification';\nimport { TitleEl } from 'components/Title/Title';\nimport { Wrapper } from './ContactsList.styled';\nimport { visibleContacts } from 'redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(visibleContacts);\n\n  return (\n    <Wrapper>\n      <TitleEl>Contacts</TitleEl>\n      {contacts.length > 0 ? (\n        <ul>\n          {contacts.map(({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      ) : (\n        <Notification message=\"Contact list is empty\" />\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  padding: 20px 40px;\n  background-color: ${props => props.theme.colors.bcgTable};\n  border-bottom: 2px solid ${props => props.theme.colors.NavBGColor};\n  text-align: center;\n  border-radius: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: ${props => props.theme.space[4]}px;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  padding: 5px 10px;\n  border: 2px solid ${props => props.theme.colors.borderColor};\n  border-radius: 5px;\n  outline: none;\n  width: 80%;\n\n  :hover,\n  :focus {\n    border-color: ${props => props.theme.colors.NavBGColor};\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  getfilteredContacts,\n  selectFilterValue,\n} from 'redux/filter/filterSlice';\nimport { FilterWrapper, Input, Title } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilterValue);\n\n  return (\n    <FilterWrapper>\n      <Title>Filter</Title>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e => dispatch(getfilteredContacts(e.target.value))}\n      />\n    </FilterWrapper>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { ContactsForm, Menu, ContactsList } from 'components/Contacts';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container } from 'components/Phonebook.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { selectError, selectIsLoading } from 'redux/contacts/contactsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const [isOpenForm, setIsOpenForm] = useState(false);\n  const [isOpenFilter, setIsOpenFilter] = useState(false);\n\n  const toggle = component => {\n    switch (component) {\n      case 'isOpenForm':\n        setIsOpenForm(f => !f);\n        break;\n      case 'isOpenFilter':\n        setIsOpenFilter(f => !f);\n        break;\n      default:\n        throw new Error(`Unknown component${component}`);\n    }\n  };\n\n  return (\n    <Container>\n      <Menu\n        isOpenForm={isOpenForm}\n        isOpenFilter={isOpenFilter}\n        toggle={toggle}\n      />\n      {isOpenForm && <ContactsForm toggle={toggle} />}\n      {isOpenFilter && <Filter />}\n      {isLoading && !error && <Loader />}\n      {!isLoading && <ContactsList />}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","Main","Title","props","theme","space","fontSizes","color","TitleEl","str","Wrapper","colors","NavBGColor","Button","isOpen","activeTextColor","Menu","toggle","isOpenFilter","isOpenForm","onClick","title","type","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","visibleContacts","createSelector","filter","contact","name","toLowerCase","includes","FormWrapper","bcgTable","FormInner","Label","fontWeights","medium","Input","Field","borderColor","ErrorMsg","ErrorMessage","errorMessage","whiteTextColor","schema","yup","shape","min","matches","required","number","ContactsForm","dispatch","useDispatch","useSelector","handleSubmit","values","resetForm","find","Notify","addContact","initialValues","validationSchema","onSubmit","autoComplete","htmlFor","id","component","Item","Contact","IconUser","RiUserFollowLine","ContactItem","deleteContact","Message","Notification","message","ContactsList","length","map","FilterWrapper","Filter","value","selectFilterValue","onChange","e","getfilteredContacts","target","useEffect","fetchContacts","useState","setIsOpenForm","setIsOpenFilter","f","Error","Loader"],"sourceRoot":""}